import vk_api
from random import randrange
from vk_bot import VkBot
from vk_DB import DbWorker, DB_path
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
from vk_api.longpoll import VkLongPoll, VkEventType

# –¢–æ–∫–µ–Ω –í–∫-–≥—Ä—É–ø–ø—ã, –æ—Ç –ª–∏—Ü–∞ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç –ø–∏—Å–∞—Ç—å –±–æ—Ç.
group_token = input('Group token: ')
# –¢–æ–∫–µ–Ω –ª—é–±–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –í–∫, –æ–Ω –Ω—É–∂–µ–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ –ª—é–¥–µ–π, —Ç–∞–∫ –∫–∞–∫ –ø–æ —Ç–æ–∫–µ–Ω—É –≥—Ä—É–ø–ø—ã —ç—Ç–æ–≥–æ —Å–¥–µ–ª–∞—Ç—å –Ω–µ–ª—å–∑—è.
bot_token = input('Bot token: ')

vk_session = vk_api.VkApi(token=group_token)
longpoll = VkLongPoll(vk_session)
vk_bot = VkBot(bot_token)
db_worker = DbWorker(DB_path)


def write_message(user_id, message, attachment=None, keyboard=None):
    vk_session.method(
        'messages.send',
        {
            'user_id': user_id,
            'message': message,
            'random_id': randrange(10 ** 7),
            'attachment': attachment,
            'keyboard': keyboard
        }
    )


def create_keyboard(request, one_time):
    keyboard = VkKeyboard(one_time=one_time)

    if request == '/–∫–æ–º–∞–Ω–¥—ã' or request == '–≤ –Ω–∞—á–∞–ª–æ' or request == '–∑–∞–≤–µ—Ä—à–∏—Ç—å' or request == '–Ω–∞—á–∞—Ç—å':
        keyboard.add_button('–ù–∞–π—Ç–∏ –ø–∞—Ä—É', color=VkKeyboardColor.POSITIVE)
        keyboard.add_line()
        keyboard.add_button('–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏—Ö—Å—è –ª—é–¥–µ–π', color=VkKeyboardColor.POSITIVE)
        keyboard.add_line()
        keyboard.add_button('–ü–æ–∫–∞–∑–∞—Ç—å —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫', color=VkKeyboardColor.NEGATIVE)

    elif request == '–Ω–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ':
        keyboard.add_button('–ó–∞–≤–µ—Ä—à–∏—Ç—å', color=VkKeyboardColor.PRIMARY)

    elif request == '–Ω–∞–π—Ç–∏ –ø–∞—Ä—É':
        keyboard.add_button('–î–æ–≤–µ—Ä–∏—Ç—å—Å—è –±–æ—Ç—É', color=VkKeyboardColor.POSITIVE)
        keyboard.add_line()
        keyboard.add_button('–£–∫–∞–∑–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞', color=VkKeyboardColor.POSITIVE)
        keyboard.add_line()
        keyboard.add_button('–í –Ω–∞—á–∞–ª–æ', color=VkKeyboardColor.PRIMARY)

    elif request == '–ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è':
        keyboard.add_button('–î–∞, –º–Ω–µ –∫—Ç–æ-—Ç–æ –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è', color=VkKeyboardColor.POSITIVE)
        keyboard.add_line()
        keyboard.add_button('–ù–µ–∞, –Ω–∏–∫—Ç–æ –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è', color=VkKeyboardColor.POSITIVE)
        keyboard.add_line()
        keyboard.add_button('–î–æ–±–∞–≤–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫', color=VkKeyboardColor.NEGATIVE)
        keyboard.add_line()
        keyboard.add_button('–í –Ω–∞—á–∞–ª–æ', color=VkKeyboardColor.PRIMARY)

    elif request == '–µ—â–µ –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è':
        keyboard.add_button('–î–æ–±–∞–≤–∏—Ç—å –µ—â–µ –æ–¥–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞', color=VkKeyboardColor.POSITIVE)
        keyboard.add_line()
        keyboard.add_button('–ó–∞–≤–µ—Ä—à–∏—Ç—å', color=VkKeyboardColor.PRIMARY)

    elif request == '–µ—â–µ –¥–æ–±–∞–≤–∏—Ç—å –≤ —á—Å':
        keyboard.add_button('–î–æ–±–∞–≤–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ –≤ –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏—Ö—Å—è', color=VkKeyboardColor.POSITIVE)
        keyboard.add_line()
        keyboard.add_button('–î–æ–±–∞–≤–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫', color=VkKeyboardColor.NEGATIVE)
        keyboard.add_line()
        keyboard.add_button('–ó–∞–≤–µ—Ä—à–∏—Ç—å', color=VkKeyboardColor.PRIMARY)

    elif request == '–µ—â–µ —É–¥–∞–ª–∏—Ç—å –∏–∑ —á—Å':
        keyboard.add_button('–£–¥–∞–ª–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ –∏–∑ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞', color=VkKeyboardColor.POSITIVE)
        keyboard.add_line()
        keyboard.add_button('–í –Ω–∞—á–∞–ª–æ', color=VkKeyboardColor.PRIMARY)

    elif request == '–ø–æ–∫–∞–∑–∞—Ç—å —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫':
        keyboard.add_button('–£–¥–∞–ª–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ –∏–∑ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞', color=VkKeyboardColor.POSITIVE)
        keyboard.add_line()
        keyboard.add_button('–í –Ω–∞—á–∞–ª–æ', color=VkKeyboardColor.PRIMARY)

    else:
        keyboard.add_button('/–∫–æ–º–∞–Ω–¥—ã', color=VkKeyboardColor.POSITIVE)

    keyboard = keyboard.get_keyboard()
    return keyboard


class VkLongPoller:
    def __init__(self):
        self.dialog_exists = False
        self.find_pair_bool = False
        self.is_liked = False
        self.add_to_blacklist = False
        self.delete_from_blacklist = False
        self.parameters_exist = False
        self.found_people = []

    def clear_info(self):
        self.dialog_exists = False
        self.find_pair_bool = False
        self.is_liked = False
        self.add_to_blacklist = False
        self.delete_from_blacklist = False
        self.parameters_exist = False
        self.found_people = []

    def start(self, event):
        write_message(
            event.user_id,
            '''–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –ª—é–¥—è–º –Ω–∞–π—Ç–∏ —Å–≤–æ—é –≤—Ç–æ—Ä—É—é –ø–æ–ª–æ–≤–∏–Ω–∫—É.
            –í–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥, –∫–æ—Ç–æ—Ä—ã–µ —è –º–æ–≥—É –≤—ã–ø–æ–ª–Ω–∏—Ç—å:
            1) –ù–∞–π—Ç–∏ —Ç–µ–±–µ –ø–∞—Ä—É üíò
            2) –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏—Ö—Å—è –ª—é–¥–µ–π üòç
            3) –ü–æ–∫–∞–∑–∞—Ç—å –ª—é–¥–µ–π –∏–∑ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ üö´''',
            keyboard=create_keyboard('/–∫–æ–º–∞–Ω–¥—ã', True)
        )

    def bye(self, event):
        write_message(event.user_id, '–ü–æ–∫–∞-–ø–æ–∫–∞! –ï—Å–ª–∏ —á—Ç–æ, –æ–±—Ä–∞—â–∞–π—Å—è!')
        self.clear_info()

    def in_start(self, event):
        write_message(event.user_id, '–ü–æ–Ω—è–ª, –¥–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑.', keyboard=create_keyboard('–≤ –Ω–∞—á–∞–ª–æ', True))
        self.clear_info()

    def complete(self, event):
        write_message(
            event.user_id,
            '''–ù–µ –∑–∞–±—É–¥—å –Ω–∞–ø–∏—Å–∞—Ç—å –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏–º—Å—è –ª—é–¥—è–º. –ù–∞–¥–µ—é—Å—å, —É –≤–∞—Å –≤—Å–µ –ø–æ–ª—É—á–∏—Ç—Å—è!üòâ
            –ê –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤—Å–ø–æ–º–Ω–∏—Ç—å, –∫—Ç–æ —Ç–µ–±–µ –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è, —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É "–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏—Ö—Å—è –ª—é–¥–µ–π"''',
            keyboard=create_keyboard('–∑–∞–≤–µ—Ä—à–∏—Ç—å', True)
        )
        self.clear_info()

    def show_commands(self, event):
        write_message(
            event.user_id,
            '''–í–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥, –∫–æ—Ç–æ—Ä—ã–µ —è –º–æ–≥—É –≤—ã–ø–æ–ª–Ω–∏—Ç—å:
            1) –ù–∞–π—Ç–∏ —Ç–µ–±–µ –ø–∞—Ä—É üíò
            2) –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏—Ö—Å—è –ª—é–¥–µ–π üòç
            3) –ü–æ–∫–∞–∑–∞—Ç—å –ª—é–¥–µ–π –∏–∑ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ üö´''',
            keyboard=create_keyboard('/–∫–æ–º–∞–Ω–¥—ã', True)
        )

    def search_for_pair(self, event):
        write_message(
            event.user_id,
            '''–ó–¥–æ—Ä–æ–≤–æ! –°–µ–π—á–∞—Å –º—ã —Ç–µ–±–µ –±—ã—Å—Ç—Ä–æ –Ω–∞–π–¥–µ–º –≤—Ç–æ—Ä—É—é –ø–æ–ª–æ–≤–∏–Ω–∫—É!
            –¢—ã –º–æ–∂–µ—à—å —É–∫–∞–∑–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ –∏–ª–∏ –¥–æ–≤–µ—Ä–∏—Ç—å—Å—è –º–Ω–µ. –ü–æ–≤–µ—Ä—å, —è —Ç–µ–±—è –Ω–µ –ø–æ–¥–≤–µ–¥—É!üòâ''',
            keyboard=create_keyboard('–Ω–∞–π—Ç–∏ –ø–∞—Ä—É', True)
        )
        self.dialog_exists = True
        self.find_pair_bool = True

    def get_search_parameters(self, event):
        write_message(
            event.user_id,
            '''–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é —Å–ª–µ–¥—É—é—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:
            1) –°–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç
            2) –û—Ç –∫–∞–∫–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞ –∏—Å–∫–∞—Ç—å
            3) –î–æ –∫–∞–∫–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞ –∏—Å–∫–∞—Ç—å
            4) Id —Å–≤–æ–µ–≥–æ –≥–æ—Ä–æ–¥–∞ (–ú–æ—Å–∫–≤–∞ - 1; –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥ - 2)

            –ü—Ä–∏–º–µ—Ä: 20, 18, 22, 1
            '''
        )
        self.parameters_exist = True

    def find_pairs_with_parameters(self, event, request):
        result = request.split(',')
        result = [item.strip() for item in result]

        write_message(event.user_id, '–ù–µ–º–Ω–æ–≥–æ –ø–æ–¥–æ–∂–¥–∏, —è –∏—â—É —Ç–≤–æ—é –≤—Ç–æ—Ä—É—é –ø–æ–ª–æ–≤–∏–Ω–∫—É')
        age = result[0]
        user_info = vk_bot.get_user_info(event.user_id)
        sex = user_info['sex']
        city = result[3]

        db_worker.add_user_to_db(user_info, age)

        if sex == 1:
            partner_sex = 2
        else:
            partner_sex = 1

        blacklist = db_worker.show_blacklist(event.user_id)
        blacklist_ids = [person['user_id'] for person in blacklist]

        user_pairs = vk_bot.find_pairs(result[1], result[2], partner_sex, city)
        self.found_people = user_pairs

        write_message(event.user_id, '–Ø –Ω–∞—à–µ–ª –¥–ª—è —Ç–µ–±—è —Å–ª–µ–¥—É—é—â–∏—Ö –ª—é–¥–µ–π:')
        for person in user_pairs:
            if person['user_id'] not in blacklist_ids:
                person_photos = [item[0] for item in person['profile_photos']]
                attachment = ','.join(person_photos)

                write_message(
                    event.user_id,
                    f'''Id: {person['user_id']}
                    –ò–º—è: {person['first_name']}
                    –§–∞–º–∏–ª–∏—è: {person['last_name']}
                    –°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤–∫: {person['url']}''',
                    attachment=attachment
                )

        write_message(
            event.user_id,
            '''–ï—Å–ª–∏ —Ç–µ–±–µ –∫—Ç–æ-—Ç–æ –ø—Ä–∏–≥–ª—è–Ω—É–ª—Å—è, –¥–∞–π –º–Ω–µ –∑–Ω–∞—Ç—å!
            –Ø —Å—Ä–∞–∑—É –∂–µ –¥–æ–±–∞–≤–ª—é —ç—Ç–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏—Ö—Å—è, —á—Ç–æ–±—ã –æ–Ω —Ç–æ—á–Ω–æ –Ω–µ –ø–æ—Ç–µ—Ä—è–ª—Å—èüòä''',
            keyboard=create_keyboard('–ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è', True)
        )
        self.find_pair_bool = False

    def dialog_trust_bot(self, event):
        write_message(
            event.user_id,
            '''–°–ø–∞—Å–∏–±–æ –∑–∞ –¥–æ–≤–µ—Ä–∏–µ, —è –ø—Ä–æ—Å—Ç–æ —Ç—Ä–æ–Ω—É—Ç! –¢–æ–ª—å–∫–æ –º–Ω–µ –Ω—É–∂–Ω–æ –∫–æ–µ-—á—Ç–æ –∑–Ω–∞—Ç—å.
            –°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?'''
        )

    def find_pairs_trust_bot(self, event, request):
        write_message(event.user_id, '–ù–µ–º–Ω–æ–≥–æ –ø–æ–¥–æ–∂–¥–∏, —è –∏—â—É —Ç–≤–æ—é –≤—Ç–æ—Ä—É—é –ø–æ–ª–æ–≤–∏–Ω–∫—É')
        age = int(request)
        user_info = vk_bot.get_user_info(event.user_id)
        sex = user_info['sex']
        city = user_info['city_id']

        db_worker.add_user_to_db(user_info, age)

        if sex == 1:
            partner_sex = 2
        else:
            partner_sex = 1

        blacklist = db_worker.show_blacklist(event.user_id)
        blacklist_ids = [person['user_id'] for person in blacklist]

        user_pairs = vk_bot.find_pairs(age - 2, age + 2, partner_sex, city)
        self.found_people = user_pairs

        write_message(event.user_id, '–Ø –Ω–∞—à–µ–ª –¥–ª—è —Ç–µ–±—è —Å–ª–µ–¥—É—é—â–∏—Ö –ª—é–¥–µ–π:')
        for person in user_pairs:
            if person['user_id'] not in blacklist_ids:
                person_photos = [item[0] for item in person['profile_photos']]
                attachment = ','.join(person_photos)

                write_message(
                    event.user_id,
                    f'''Id: {person['user_id']}
                    –ò–º—è: {person['first_name']}
                    –§–∞–º–∏–ª–∏—è: {person['last_name']}
                    –°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤–∫: {person['url']}''',
                    attachment=attachment
                )

        write_message(
            event.user_id,
            '''–ï—Å–ª–∏ —Ç–µ–±–µ –∫—Ç–æ-—Ç–æ –ø—Ä–∏–≥–ª—è–Ω—É–ª—Å—è, –¥–∞–π –º–Ω–µ –∑–Ω–∞—Ç—å!
            –Ø —Å—Ä–∞–∑—É –∂–µ –¥–æ–±–∞–≤–ª—é —ç—Ç–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏—Ö—Å—è, —á—Ç–æ–±—ã –æ–Ω —Ç–æ—á–Ω–æ –Ω–µ –ø–æ—Ç–µ—Ä—è–ª—Å—èüòä''',
            keyboard=create_keyboard('–ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è', True)
        )
        self.find_pair_bool = False

    def dialog_add_liked_person(self, event):
        write_message(
            event.user_id,
            '''–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ "id" –ø–æ–Ω—Ä–∞–≤–∏–≤—à–µ–≥–æ—Å—è —á–µ–ª–æ–≤–µ–∫–∞:'''
        )
        self.add_to_blacklist = False
        self.is_liked = True

    def nobody_is_liked(self, event):
        write_message(
            event.user_id,
            '–≠—Ö, –∂–∞–ª–∫–æ... –ù—É, –Ω–∏—á–µ–≥–æ, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑! –Ø —É–≤–µ—Ä–µ–Ω, —Ç–µ–±–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∫—Ç–æ-—Ç–æ –ø—Ä–∏–≥–ª—è–Ω–µ—Ç—Å—è!üòä',
            keyboard=create_keyboard('–≤ –Ω–∞—á–∞–ª–æ', True)
        )
        self.clear_info()

    def add_liked_person(self, event, request):
        for person in self.found_people:
            if int(request) == person['user_id']:
                print('–î–æ–±–∞–≤–ª—è—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
                db_worker.add_liked_to_db(event.user_id, person)

        write_message(
            event.user_id,
            '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏—Ö—Å—è‚úÖ',
            keyboard=create_keyboard('–µ—â–µ –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è', True)
        )

    def mistake_add_liked_person(self, event):
        write_message(
            event.user_id,
            '''–ò–∑–≤–∏–Ω–∏, –Ω–æ –≤ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ø—É—â–µ–Ω–∞ –æ—à–∏–±–∫–∞üôÅ
            –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!)''',
            keyboard=create_keyboard('–Ω–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ', True)
        )

    def show_liked_people(self, event):
        liked_people = db_worker.show_liked_people(event.user_id)

        if not liked_people:
            write_message(
                event.user_id,
                '–≠—Ö, —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç. –≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —Ç–µ–±–µ –ø–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è. –ù–æ –≤—Å–µ –≤–ø–µ—Ä–µ–¥–∏!üòâ',
                keyboard=create_keyboard('–∑–∞–≤–µ—Ä—à–∏—Ç—å', True)
            )
        else:
            write_message(
                event.user_id,
                f'–í—Å–µ–≥–æ –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏—Ö—Å—è –ª—é–¥–µ–π: {len(liked_people)}',
                keyboard=create_keyboard('–∑–∞–≤–µ—Ä—à–∏—Ç—å', True)
            )

            for person in liked_people:
                write_message(
                    event.user_id,
                    f'''Id: {person['user_id']}
                    –ò–º—è: {person['first_name']}
                    –§–∞–º–∏–ª–∏—è: {person['last_name']}
                    –ü—Ä–æ—Ñ–∏–ª—å –≤–∫: {person['profile_url']}'''
                )

    def dialog_add_to_blacklist(self, event):
        write_message(
            event.user_id,
            '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ "id" —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—á–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫:'
        )
        self.add_to_blacklist = True

    def add_person_to_blacklist(self, event, request):
        for person in self.found_people:
            if int(request) == person['user_id']:
                print('–î–æ–±–∞–≤–ª—è—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
                db_worker.add_to_blacklist(event.user_id, person)

        write_message(
            event.user_id,
            '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫üö´',
            keyboard=create_keyboard('–µ—â–µ –¥–æ–±–∞–≤–∏—Ç—å –≤ —á—Å', True)
        )

    def mistake_add_to_blacklist(self, event):
        write_message(
            event.user_id,
            '''–ò–∑–≤–∏–Ω–∏, –Ω–æ –≤ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ø—É—â–µ–Ω–∞ –æ—à–∏–±–∫–∞üôÅ
            –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!)''',
            keyboard=create_keyboard('–Ω–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ', True)
        )

    def dialog_delete_from_blacklist(self, event):
        write_message(
            event.user_id,
            '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ "id" —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å –∏–∑ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞:'
        )
        self.delete_from_blacklist = True

    def delete_person_from_blacklist(self, event, request):
        result = db_worker.delete_from_blacklist(event.user_id, request)
        self.delete_from_blacklist = False

        if result:
            write_message(
                event.user_id,
                f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω –∏–∑ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞‚úÖ',
                keyboard=create_keyboard('–µ—â–µ —É–¥–∞–ª–∏—Ç—å –∏–∑ —á—Å', True)
            )
        else:
            write_message(
                event.user_id,
                f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è c —Ç–∞–∫–∏–º id –Ω–µ—Ç –≤ —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µüë£',
                keyboard=create_keyboard('–µ—â–µ —É–¥–∞–ª–∏—Ç—å –∏–∑ —á—Å', True)
            )

    def mistake_delete_from_blacklist(self, event):
        write_message(
            event.user_id,
            '''–ò–∑–≤–∏–Ω–∏, –Ω–æ –≤ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ø—É—â–µ–Ω–∞ –æ—à–∏–±–∫–∞üôÅ
            –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!)''',
            keyboard=create_keyboard('–Ω–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ', True)
        )

    def show_blacklist(self, event):
        blacklist_people = db_worker.show_blacklist(event.user_id)
        self.dialog_exists = True

        if not blacklist_people:
            write_message(
                event.user_id,
                '–í —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ –ø–æ–∫–∞ –Ω–∏–∫–æ–≥–æ –Ω–µ—Ç.',
                keyboard=create_keyboard('–ø–æ–∫–∞–∑–∞—Ç—å —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫', True)
            )
        else:
            write_message(
                event.user_id,
                f'–í—Å–µ–≥–æ –ª—é–¥–µ–π –≤ —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ: {len(blacklist_people)}',
                keyboard=create_keyboard('–ø–æ–∫–∞–∑–∞—Ç—å —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫', True)
            )

            for person in blacklist_people:
                write_message(
                    event.user_id,
                    f'''Id: {person['user_id']}
                    –ò–º—è: {person['first_name']}
                    –§–∞–º–∏–ª–∏—è: {person['last_name']}
                    –ü—Ä–æ—Ñ–∏–ª—å –≤–∫: {person['profile_url']}'''
                )

    def unknown_command(self, event):
        write_message(
            event.user_id,
            '''–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é...üòî
            –í–≤–µ–¥–∏ "/–∫–æ–º–∞–Ω–¥—ã" –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.''',
            keyboard=create_keyboard('', True)
        )
        self.clear_info()

    def start_vk_longpoll(self):
        for event in longpoll.listen():
            if event.type == VkEventType.MESSAGE_NEW and event.to_me:
                try:
                    print('–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:', event.text)
                    print(f'–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {event.user_id}\n')
                    request = event.text.lower()

                    if request == '–Ω–∞—á–∞—Ç—å':
                        self.start(event)
                    elif request == '–ø–æ–∫–∞':
                        self.bye(event)
                    elif request == '–≤ –Ω–∞—á–∞–ª–æ' and self.dialog_exists:
                        self.in_start(event)
                    elif request == '–∑–∞–≤–µ—Ä—à–∏—Ç—å':
                        self.complete(event)
                    elif request == '/–∫–æ–º–∞–Ω–¥—ã':
                        self.show_commands(event)
                    elif request == '–Ω–∞–π—Ç–∏ –ø–∞—Ä—É':
                        self.search_for_pair(event)
                    elif request == '—É–∫–∞–∑–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞' and self.find_pair_bool:
                        self.get_search_parameters(event)
                    elif self.find_pair_bool and self.parameters_exist:
                        self.find_pairs_with_parameters(event, request)
                    elif request == '–¥–æ–≤–µ—Ä–∏—Ç—å—Å—è –±–æ—Ç—É' and self.find_pair_bool:
                        self.dialog_trust_bot(event)
                    elif request.isdigit() and int(request) > 0 and self.find_pair_bool:
                        self.find_pairs_trust_bot(event, request)
                    elif request == '–¥–∞, –º–Ω–µ –∫—Ç–æ-—Ç–æ –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è' or request == '–¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ –æ–¥–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞' or request == '–¥–æ–±–∞–≤–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ –≤ –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏—Ö—Å—è':
                        self.dialog_add_liked_person(event)
                    elif request == '–Ω–µ–∞, –Ω–∏–∫—Ç–æ –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è' and self.dialog_exists:
                        self.nobody_is_liked(event)
                    elif request.isdigit() and self.is_liked:
                        self.add_liked_person(event, request)
                    elif not request.isdigit() and self.is_liked:
                        self.mistake_add_liked_person(event)
                    elif request == '–ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏—Ö—Å—è –ª—é–¥–µ–π':
                        self.show_liked_people(event)
                    elif request == '–¥–æ–±–∞–≤–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫':
                        self.dialog_add_to_blacklist(event)
                    elif request.isdigit() and self.add_to_blacklist:
                        self.add_person_to_blacklist(event, request)
                    elif not request.isdigit() and self.add_to_blacklist:
                        self.mistake_add_to_blacklist(event)
                    elif request == '—É–¥–∞–ª–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ –∏–∑ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞':
                        self.dialog_delete_from_blacklist(event)
                    elif request.isdigit() and self.delete_from_blacklist:
                        self.delete_person_from_blacklist(event, request)
                    elif not request.isdigit() and self.delete_from_blacklist:
                        self.mistake_delete_from_blacklist(event)
                    elif request == '–ø–æ–∫–∞–∑–∞—Ç—å —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫':
                        self.show_blacklist(event)
                    else:
                        self.unknown_command(event)

                except Exception as ex:
                    print(ex)
                    write_message(
                        event.user_id,
                        '–£–ø—Å... –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!',
                        keyboard=create_keyboard('/–∫–æ–º–∞–Ω–¥—ã', True)
                    )


if __name__ == '__main__':
    db_worker.create_db_tables()
    VkLongPoller().start_vk_longpoll()
